# Generated by Django 5.2.7 on 2025-10-16 13:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIWebsiteTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('website_type', models.CharField(choices=[('ecommerce', 'üè™ E-Commerce Store'), ('business', 'üíº Business Website'), ('blog', 'üìù Blog & Personal'), ('portfolio', 'üé® Portfolio & Creative'), ('agency', 'üìä Agency & Marketing'), ('education', 'üéì Education & Courses'), ('restaurant', 'üçï Restaurant & Food'), ('real_estate', 'üè† Real Estate'), ('nonprofit', 'ü§ù Non-Profit'), ('other', 'üîß Other')], max_length=20)),
                ('description', models.TextField()),
                ('template_data', models.JSONField(help_text='Complete website structure - pages, content blocks, styling')),
                ('sample_content', models.JSONField(help_text='Sample content that can be customized by AI')),
                ('color_schemes', models.JSONField(default=list, help_text='Suggested color combinations')),
                ('recommended_pages', models.JSONField(default=list, help_text='Suggested pages for this type')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['website_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WebsiteProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Website name (e.g., 'Sweet Bakery')", max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('website_type', models.CharField(choices=[('ecommerce', 'üè™ E-Commerce Store'), ('business', 'üíº Business Website'), ('blog', 'üìù Blog & Personal'), ('portfolio', 'üé® Portfolio & Creative'), ('agency', 'üìä Agency & Marketing'), ('education', 'üéì Education & Courses'), ('restaurant', 'üçï Restaurant & Food'), ('real_estate', 'üè† Real Estate'), ('nonprofit', 'ü§ù Non-Profit'), ('other', 'üîß Other')], max_length=20)),
                ('ai_description', models.TextField(help_text='Tell us about your business - AI will use this to build your site')),
                ('ai_generated_data', models.JSONField(default=dict, help_text='AI-generated website structure, content, and suggestions')),
                ('custom_modifications', models.JSONField(default=dict, help_text="User's custom changes to AI-generated content")),
                ('status', models.CharField(choices=[('draft', 'Draft - Building'), ('preview', 'Preview - Ready to Review'), ('published', 'Published - Live'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('brand_colors', models.JSONField(default=dict, help_text='Primary and secondary colors for the website')),
                ('logo_url', models.URLField(blank=True, help_text='URL to uploaded logo')),
                ('favicon_url', models.URLField(blank=True, help_text='URL to uploaded favicon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='websites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebsiteDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_type', models.CharField(choices=[('subdomain', 'üÜì Free Subdomain (sitename.justcodeworks.eu)'), ('purchased', 'üõí Purchased Domain (sitename.com)'), ('custom', 'üîó Custom Domain (bring your own)')], max_length=20)),
                ('domain_name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('ssl_enabled', models.BooleanField(default=True)),
                ('registration_status', models.CharField(choices=[('pending', 'Pending Registration'), ('registering', 'Registration in Progress'), ('registered', 'Successfully Registered'), ('active', 'Active & Live'), ('expired', 'Expired'), ('failed', 'Registration Failed')], default='pending', max_length=20)),
                ('dns_configured', models.BooleanField(default=False)),
                ('nameservers', models.JSONField(default=list, help_text='DNS nameservers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('website', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='domain', to='website_builder.websiteproject')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DomainOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain_name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('years', models.PositiveIntegerField(default=1, help_text='Registration years')),
                ('payment_status', models.CharField(choices=[('pending', 'Payment Pending'), ('processing', 'Processing Payment'), ('paid', 'Payment Successful'), ('failed', 'Payment Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_id', models.CharField(blank=True, max_length=100)),
                ('payment_data', models.JSONField(default=dict)),
                ('order_status', models.CharField(choices=[('created', 'Order Created'), ('payment_pending', 'Awaiting Payment'), ('processing', 'Processing Domain Registration'), ('completed', 'Domain Registered & Active'), ('failed', 'Registration Failed'), ('cancelled', 'Order Cancelled')], default='created', max_length=20)),
                ('registrar_order_id', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_orders', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website_builder.websiteproject')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebsiteContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(choices=[('home', 'Homepage'), ('about', 'About Us'), ('services', 'Services'), ('products', 'Products'), ('portfolio', 'Portfolio'), ('blog', 'Blog'), ('contact', 'Contact'), ('custom', 'Custom Page')], max_length=20)),
                ('page_slug', models.CharField(max_length=100)),
                ('page_title', models.CharField(max_length=200)),
                ('content_blocks', models.JSONField(default=list, help_text='Page content as structured blocks (hero, text, gallery, etc.)')),
                ('seo_title', models.CharField(blank=True, max_length=200)),
                ('seo_description', models.TextField(blank=True, max_length=500)),
                ('seo_keywords', models.TextField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='website_builder.websiteproject')),
            ],
            options={
                'ordering': ['sort_order', 'page_title'],
                'unique_together': {('website', 'page_slug')},
            },
        ),
    ]
